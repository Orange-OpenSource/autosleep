//fork from https://github.com/springfox/springfox/blob/fb780ee1f14627b239fba95730a69900b9b2313a/gradle/coverage.gradle
apply plugin: 'jacoco'
apply plugin: "com.github.kt3k.coveralls"

def analysableProjects = subprojects.findAll { it.name != 'spring-apps' }

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    description = 'Generates an aggregate report from all subprojects'
    dependsOn(analysableProjects.test)

    additionalSourceDirs = files(analysableProjects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(analysableProjects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(analysableProjects.sourceSets.main.output)
    executionData = files(analysableProjects.jacocoTestReport.executionData)

    reports {
        html.enabled = true // human readable
        xml.enabled = true // required by coveralls
    }

    onlyIf = {
        /* jacocoRootReport doesn't work if some subprojects don't have any tests
         * at all because this causes the onlyIf of JacocoReport to be false. */
        true
    }

    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['org/cloudfoundry/autosleep/access/cloudfoundry/**', //won't test cf-java-client
                              'org/cloudfoundry/autosleep/access/cloudfoundry/model/**', //won't test pojo
                              'org/cloudfoundry/autosleep/access/cloudfoundry/config/**', //won't test config
                              'org/cloudfoundry/autosleep/util/TimeManager.class',
                              'org/cloudfoundry/autosleep/access/dao/model/**',  //won't test pojo
                              'org/cloudfoundry/autosleep/access/dao/config/data/RelationalCloudDataSourceConfig.java', //cloud config
                              'org/cloudfoundry/autosleep/config/ContextInitializer.class', //won't test cloud context init
                              'org/cloudfoundry/autosleep/Application.class', //skip main
                              'org/cloudfoundry/autosleep/ui/proxy/Application.class', //skip main
                              'org/cloudfoundry/autosleep/ui/proxy/ProxyController.class' //not implemented for now
             ])
        })
    }
}

coveralls {
    sourceDirs = analysableProjects.sourceSets.main.allSource.srcDirs.flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

